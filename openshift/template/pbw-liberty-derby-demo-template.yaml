apiVersion: v1
kind: Template
metadata:
  name: liberty-demo-pbw-template
  annotations:
    openshift.io/display-name: Plants by WebSphere on Liberty
    description: Template Plants by WebSphere on Liberty App
    tags: liberty,websphere,derby
    openshift.io/provider-display-name: Ernst & Young - Digital Emerging Technologies
    openshift.io/documentation-url: https://github.com/mikecai-ey/sample.plantsbywebsphere.git
parameters:
  - name: APP_NAME
    description: The name assigned to all of the application objects defined in this template.
    displayName: Application Name
    required: true
    value: pbw-liberty-derby-demo
  - name: PROJECT_NAME
    description: The name of the deployed project.
    displayName: Deployed Project Name
    required: true
    value: liberty-demo-pbw-custom-deploy
  - name: GIT_SOURCE_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
    value: https://github.com/mikecai-ey/sample.plantsbywebsphere.git
  - name: GIT_SOURCE_REF
    description: The source Ref for the application
    displayName: Source Ref
    required: true
    value: master
  - description: Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.
    displayName: GitHub Webhook Secret Ref
    value: github-webhook-secret-key
    name: GITHUB_WEBHOOK_SECRET_REF
    required: true
objects:
  #################### ImageStrem ####################
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      lookupPolicy:
        local: true
      tags:
      - name: latest
        referencePolicy:
          type: Local
  #################### BuildConfig ####################
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      runPolicy: Serial
      triggers: 
        -
          type: GitHub
          github:
            secretReference:
              name: ${GITHUB_WEBHOOK_SECRET_REF}
      source: 
        git:
          uri: ${GIT_SOURCE_URL}
          ref: master
        type: Git
      strategy: 
        dockerStrategy:
          dockerfilePath: Dockerfile
        type: Docker
      output: 
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
  #################### DeploymentConfig ####################
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
          - name: ${APP_NAME}
            image: ${APP_NAME}:latest
            imagePullPolicy: Always
            ports:
            - containerPort: 9080
              protocol: TCP
          dnsPolicy: ClusterFirst
          restartPolicy: Always
      triggers:
      - type: ConfigChange 
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: ${APP_NAME}:latest
        type: ImageChange
      strategy:
        type: Rolling
  #################### Service ####################
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      ports:
      - name: 9080-tcp
        port: 9080
        protocol: TCP
        targetPort: 9080
      - name: 9443-tcp
        port: 9443
        protocol: TCP
        targetPort: 9443
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
  #################### Route ####################
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
      namespace: ${PROJECT_NAME}
    spec:
      port:
        targetPort: 9080-tcp
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      tls:
        termination: edge
      wildcardPolicy: None

